# ls1intum/.github/workflows/deploy-docker-compose.yml
name: Deploy Docker Compose

on:
  workflow_call:
    inputs:
      environment:
        type: string
        description: "The deployment environment (e.g., production, staging)"
        required: true
      docker-compose-file:
        type: string
        default: "./docker-compose.yml"
        description: "Path to the Docker Compose file (Default: ./docker-compose.yml)"
      image-tag:
        type: string
        default: latest
        description: "Tag of the Docker images to deploy (Default: latest)"
      env-vars:
        type: string
        description: "Additional environment variables in KEY=VALUE format, separated by newlines"
        required: false

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: 
      name: ${{ inputs.environment }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: SSH to VM and Execute Docker-Compose Down (if exists)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ vars.VM_HOST }}
          username: ${{ vars.VM_USERNAME }}
          key: ${{ secrets.VM_SSH_PRIVATE_KEY }}
          proxy_host: ${{ vars.DEPLOYMENT_GATEWAY_HOST }}
          proxy_username: ${{ vars.DEPLOYMENT_GATEWAY_USER }}
          proxy_key: ${{ secrets.DEPLOYMENT_GATEWAY_SSH_KEY }}
          proxy_port: ${{ vars.DEPLOYMENT_GATEWAY_PORT }}
          script: |
            #!/bin/bash
            set -e  # Exit immediately if a command exits with a non-zero status

            COMPOSE_FILE="${{ inputs.docker-compose-file }}"

            # Check if docker-compose.prod.yml exists
            if [ -f "$COMPOSE_FILE" ]; then
              echo "$COMPOSE_FILE found."
              
              # Check if .env exists
              if [ -f ".env" ]; then
                docker compose -f "$COMPOSE_FILE" --env-file=".env" down --remove-orphans --rmi all
              else
                docker compose -f "$COMPOSE_FILE" down --remove-orphans --rmi all
              fi
            else
              echo "$COMPOSE_FILE does not exist. Skipping docker compose down."
            fi

      - name: Copy Docker Compose File to VM Host
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ vars.VM_HOST }}
          username: ${{ vars.VM_USERNAME }}
          key: ${{ secrets.VM_SSH_PRIVATE_KEY }}
          proxy_host: ${{ vars.DEPLOYMENT_GATEWAY_HOST }}
          proxy_username: ${{ vars.DEPLOYMENT_GATEWAY_USER }}
          proxy_key: ${{ secrets.DEPLOYMENT_GATEWAY_SSH_KEY }}
          proxy_port: ${{ vars.DEPLOYMENT_GATEWAY_PORT }}
          source: ${{ inputs.docker-compose-file }}
          target: /home/${{ vars.VM_USERNAME }}

      - name: SSH to VM and Create .env File
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ vars.VM_HOST }}
          username: ${{ vars.VM_USERNAME }}
          key: ${{ secrets.VM_SSH_PRIVATE_KEY }}
          proxy_host: ${{ vars.DEPLOYMENT_GATEWAY_HOST }}
          proxy_username: ${{ vars.DEPLOYMENT_GATEWAY_USER }}
          proxy_key: ${{ secrets.DEPLOYMENT_GATEWAY_SSH_KEY }}
          proxy_port: ${{ vars.DEPLOYMENT_GATEWAY_PORT }}
          script: |
            touch .env

            echo "ENVIRONMENT=${{ inputs.environment }}" > .env
            echo "IMAGE_TAG=${{ inputs.image-tag }}" >> .env
            if [ "${{ inputs.env-vars }}" != "" ]; then
              echo "${{ inputs.env-vars }}" >> .env
            fi

      - name: SSH to VM and Execute Docker Compose Up
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ vars.VM_HOST }}
          username: ${{ vars.VM_USERNAME }}
          key: ${{ secrets.VM_SSH_PRIVATE_KEY }}
          proxy_host: ${{ vars.DEPLOYMENT_GATEWAY_HOST }}
          proxy_username: ${{ vars.DEPLOYMENT_GATEWAY_USER }}
          proxy_key: ${{ secrets.DEPLOYMENT_GATEWAY_SSH_KEY }}
          proxy_port: ${{ vars.DEPLOYMENT_GATEWAY_PORT }}
          script: |
            docker compose -f ${{ inputs.docker-compose-file }} --env-file=.env up --pull=always -d